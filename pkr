#!/usr/bin/env Rscript

"pkr :: opinionated set of tools for working with R

Usage:
  pkr init
  pkr (in | install) [<inpkg>...] [--global]
  pkr (rm | remove) <rmpkg>... [--global]
  pkr status
  pkr clean
  pkr test
  pkr lint
  pkr create <script>
  pkr save <script>
  pkr -h | --help
  pkr -v | --version

Arguments:
  init             Initialize packrat project
  in, install      Install packages
  rm, remove       Remove packages
  status           Show installed packages
  clean            Remove unused packages
  test             Run tests
  lint             Lint *.R files
  create           Create a runnable R script stub with docopt
  save             Save script in pkr bin

Options:
  -global          Use global package installation location
  -h --help        Print this help
  -v --version     Show version number" -> doc

## Use globally installed docopt
packrat::off()
opts <- docopt::docopt(doc, version = "v0.2.1")

## Don't bug me!
default_mirror <- "http://cran.us.r-project.org"
pkr_bin_path <- "~/.pkr/bin"

#' Check if in a packrat project, exit if not
#' Turn on packrat mode
check_packrat <- function() {
  if (!file.exists("./packrat")) {
    stop("Not in a packrat project. Run `pkr init` first.")
  } else {
    packrat::on()
  }
}

#' Install package if not found
check_install <- function(package_name, mirror = default_mirror) {
  if (!require(package_name, character.only = TRUE)) {
    cat(paste0(package_name, " not found. Installing...\n"))
    install.packages(package_name, repos = mirror, quiet = TRUE)
  }
}

init_packrat <- function() {
  packrat::set_opts(vcs.ignore.src = TRUE)
  packrat::set_opts(use.cache = TRUE)
  packrat::init()
}

#' Setup bin directory for packrat
setup_pkr_bin <- function(pkr_bin = pkr_bin_path) {
  if (!dir.exists(pkr_bin)) {
    cat("Setting up pkr bin directory...\n")
    dir.create(pkr_bin, showWarnings = FALSE, recursive = TRUE)
    oldwd <- getwd()
    setwd(pkr_bin_path)
    init_packrat()
    setwd(oldwd)
  }
}

## Entry point
if (opts[["init"]]) {
  ## Run packrat init
  init_packrat()
  ## Install devtools locally for github packages
  install.packages("devtools", repos = mirror)
} else if (opts[["in"]] | opts[["install"]]) {
  ## Install given packages
  if (opts[["--global"]]) {
    packrat::off()
    cat("Using global path\n")
    if (length(opts[["<inpkg>"]]) == 0) {
      stop("Provide at least one package")
    }
  } else {
    check_packrat()
  }
  if (length(opts[["<inpkg>"]]) == 0) {
    init_packrat()

  } else {
    ## Packages to be installed from github
    github_indices <- sapply(opts[["<inpkg>"]], function(p) {
      splits <- strsplit(p, "/")[[1]]

      ## Check if its installed
      if (length(splits) > 1) {
        !require(splits[2])
      } else {
        FALSE
      }
    })
    for (github_package in opts[["<inpkg>"]][github_indices]) {
      devtools::install_github(github_package)
    }

    rest_packages <- opts[["<inpkg>"]][!github_indices]
    if (length(rest_packages) > 0) {
      ## Install regular CRAN packages
      cran_indices <- !sapply(rest_packages, require, character.only = TRUE)
      rest_packages <- rest_packages[cran_indices]
      if (length(rest_packages) > 0) {
        install.packages(rest_packages[cran_indices], repos = mirror)
      }
    }
  }

} else if (opts[["rm"]] | opts[["remove"]]) {
  if (opts[["--global"]]) {
    packrat::off()
    cat("Using global path\n")
  } else {
    check_packrat()
  }
  remove.packages(opts[["<rmpkg>"]])
} else if (opts[["status"]]) {
  check_packrat()
  packrat::status()
} else if (opts[["clean"]]) {
  check_packrat()
  packrat::clean()
} else if (opts[["lint"]]) {
  check_install("lintr")
  lintr::lint_package()
} else if (opts[["test"]]) {
  check_install("testthat")
  system("R CMD check")
} else if (opts[["create"]]) {
  name <- opts[["<script>"]]
  stub <- c(
    "#!/usr/bin/env Rscript",
    "",
    paste("\"usage:", name, "\" -> doc"),
    "",
    "opts <- docopt::docopt(doc)"
  )
  writeLines(stub, name)
} else if (opts[["save"]]) {
  ## Save the given script as an executable
  setup_pkr_bin()

  source_file <- opts[["<script>"]]
  script_name <- basename(source_file)
  target_file <- file.path(pkr_bin_path, script_name)
  file.copy(from = source_file, to = target_file, overwrite = TRUE)
  Sys.chmod(target_file, mode = "755")

  ## Create symlink for short name
  setwd(pkr_bin_path)
  short_name <- sub("^([^.]*).*", "\\1", script_name)
  if (!file.exists(short_name)) {
    file.symlink(source_file, short_name)
  }
  ## Install deps
  init_packrat()
}
